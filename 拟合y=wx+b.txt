import numpy as np
import tensorflow as tf

x_data_1=np.random.rand(100)
#x_data_2=np.random.rand(100)
y_data= 11*x_data_1+15 #+23*x_data_2
######start
trainw=tf.Variable(tf.random_uniform([1],-1.0,1.0))
biases=tf.Variable(tf.zeros([1]))

y=trainw*x_data_1 + biases
###loss function
loss=tf.reduce_mean(tf.square(y-y_data))###Fang Cha## square<=>**2 ## reduce_mean<=>averange
optimizer = tf.train.GradientDescentOptimizer(0.1) ###You Hua ###train's way##basic optimizer'name = Gradient Descent Optimizerï¼›0.5/step
train =optimizer.minimize(loss)

init = tf.initialize_all_variables()##Chu Shi Hua 
######end
sess =tf.Session()
sess.run(init)
###only when "run" ,we can use the code!
for T in range(200):
    sess.run(train)#train->loss&optimizer->y&y_data->x_data_1###link all code
    if T%20==0:
        print(step,sess.run(trainw),sess.run(biases))
    